package fr.dok.chabadabada.model;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import fr.dok.chabadabada.model.ChabadaCard;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table CHABADA_CARD.
*/
public class ChabadaCardDao extends AbstractDao<ChabadaCard, Long> {

    public static final String TABLENAME = "CHABADA_CARD";

    /**
     * Properties of entity ChabadaCard.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property FRENCH_WORD = new Property(1, String.class, "FRENCH_WORD", false, "FRENCH__WORD");
        public final static Property ENGLISH_WORD = new Property(2, String.class, "ENGLISH_WORD", false, "ENGLISH__WORD");
        public final static Property CARD_TYPE = new Property(3, Integer.class, "CARD_TYPE", false, "CARD__TYPE");
    };


    public ChabadaCardDao(DaoConfig config) {
        super(config);
    }
    
    public ChabadaCardDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'CHABADA_CARD' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'FRENCH__WORD' TEXT," + // 1: FRENCH_WORD
                "'ENGLISH__WORD' TEXT," + // 2: ENGLISH_WORD
                "'CARD__TYPE' INTEGER);"); // 3: CARD_TYPE
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'CHABADA_CARD'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, ChabadaCard entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String FRENCH_WORD = entity.getFRENCH_WORD();
        if (FRENCH_WORD != null) {
            stmt.bindString(2, FRENCH_WORD);
        }
 
        String ENGLISH_WORD = entity.getENGLISH_WORD();
        if (ENGLISH_WORD != null) {
            stmt.bindString(3, ENGLISH_WORD);
        }
 
        Integer CARD_TYPE = entity.getCARD_TYPE();
        if (CARD_TYPE != null) {
            stmt.bindLong(4, CARD_TYPE);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public ChabadaCard readEntity(Cursor cursor, int offset) {
        ChabadaCard entity = new ChabadaCard( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // FRENCH_WORD
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // ENGLISH_WORD
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3) // CARD_TYPE
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, ChabadaCard entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setFRENCH_WORD(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setENGLISH_WORD(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setCARD_TYPE(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(ChabadaCard entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(ChabadaCard entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
